#!/bin/bash

#-------#
# DEBUG #
#-------#{{{
#set -vx
#}}}

#---------------#
# SHELL OPTIONS #
#---------------#{{{
shopt -s lastpipe
#}}}

#--------------#
# SCRIPT NAME  #
#--------------#{{{
_name_=${0##*/}
#}}}

#----------------#
# MAKE TMP FILES #
#----------------#{{{
_tmp_file_="/tmp/urlgateXX_X"
#}}}

#------------------------------------#
# DEFAULT REGEX TO USE FROM URLVIWER #
#------------------------------------#{{{
URLGATE_REGEX="(((http|https|ftp|gopher)|mailto):(\/\/)?[^ <>\"\t]|(www|ftp)[0-9]?\\.[-a-z0-9.]+)[^ .,;\t\n\r<\">\\):]?[^, <>\"\t]*[^ .,;\t\n\r<\">\\):]"
#}}}

#-------------------------#
# DEFAULT OPTION FOR GREP #
#-------------------------#{{{
URLGATE_GREP="${URLGATE_GREP:--w}"
#}}}

#--------------------------#
# DEFAULT OPTION FOR DMENU #
#--------------------------#{{{
URLGATE_DMENU=${URLGATE_DMENU:--p "Urlgate: " -i -l 5}
#}}}

#----------------------#
# GET HTTPS LINKS LIST #
#----------------------#{{{
_get_links_(){
if [ "$_target_" ]; then
    # grep link from file
    \grep -Po "$URLGATE_REGEX" "$_target_" > "$_tmp_file_" 2> /dev/null

    # if no dmenu or grep option giving print result
    [ "$GREP" ] || { [ "$DMENU" ] || \cat "$_tmp_file_" ;}
else
    echo >&2 "${_name_^^}: No Input Giving"
    exit 1
fi
}
#}}}

#------------------------#
# CURL DOWNLOAD WEN PAGE #
#------------------------#{{{
_curl_(){
_tmp_curl_="/tmp/urlgateXX_curl"

[ "$_CURL_" ] && {
    \curl "$CURL" -o "$_tmp_curl_"
    _target_="$_tmp_curl_"
} || {
    echo >&2 "${_name_^^}: No URL Giving"
    exit 1
}
}
#}}}

#-------------------#
# GREP SPACIAL LINK #
#-------------------#{{{
_grep_(){
[ "$_GREP_" ] && {
    # create tmp file for grep
    local _tmp_grep_="/tmp/urlgateXX_grep"

    # grepping the new links
    \grep "$URLGATE_GREP" "$_GREP_" "$_tmp_file_" > "$_tmp_grep_"

    # rename the main VARIABLE
    _tmp_file_="$_tmp_grep_"

    # if no dmenu option giving print result
    [ "$DMENU" ] || \cat "$_tmp_file_"
} || {
    echo >&2 "${_name_^^}: No Grep Search String Giving"
    exit 1
}
}
#}}}

#--------------#
# DMENU SELECT #
#--------------#{{{
_dmenu_(){
    read -r _resoult_ < <(\cat $_tmp_file_ | dmenu "$URLGATE_DMENU" )

    # if no EXEC option giving print result
    [ "$EXEC" ] || echo $_resoult_
}
#}}}

#--------------#
# EXEC COMMAND #
#--------------#{{{
_exec_(){
# check if you Exec only with dme
[ "$DMENU" ] || { echo >&2 "${_name_^^}: Not Allow Exec Command Without Dmenu Option" && exit 1 ;}

[ "$_EXEC_" ] && {
    _EXEC_=$(echo $_EXEC_ | sed "s,%u,$_resoult_,")
    eval "$_EXEC_"
} || {
    echo -e "$_resoult_"
    echo >&2 "${_name_^^} : No Exec Command Giving"
    exit 1
}
}
#}}}

#-------------#
# HELP DIALOG #
#-------------#{{{
_help_(){
cat <<- HELP
${_name_^^} Extract URLs from a text file in bure bash

${_name_} [OPTS]

OPTS :
    -c|--curl     : Download website to Extract URLs from
    -f|--file     : Give file to Extract URLs from
    -g|--grep     : Search for URLs with grep
    -d|--dmenu    : Use dmenu for URL select
    -e|--exec     : Run Command on Selected URL

NOTE :
    - You can pipe out from external Commands or Programs
        ex : cat /path/to/file | $_name_ -d

    - You can change dmenu options with "URLGATE_DMENU" variable
        ex : URLGATE_DMENU="-p "URL SELECT :" -i -nb black -nf white" && $_name_ -f /path/to/file -d

    - You can change default search REGEX options with "URLGATE_REGEX" variable
        ex : URLGATE_REGEX="http?://[^ ]+" && $_name_ -f /path/to/file

    - You can change default grep options with "URLGATE_GREP" variable
        ex : URLGATE_GREP="-Ei" && $_name_ -f /path/to/file -g "youtube.com"

HELP
}
#}}}

#---------------#
# MAIN FUNCTION #
#---------------#{{{
_main_(){
# if /dev/stdin is empty dont take it
if [ -p /dev/stdin ];then
    _PIPE_=true
    _target_="/dev/stdin"
fi

# looking for options
while [ "$1" ]; do
    case "$1" in
        -c|--curl )
            shift
            CURL=true _CURL_="$1"
            ;;
        -f|--file )
            shift
            FILE=true
            [ -f "$1" ] && _target_="$1"
            ;;
        -g|--grep )
            shift
            GREP=true _GREP_="$1"
            ;;
        -d|--dmenu )
            DMENU=true
            ;;
        -e|--exec )
            shift
            EXEC=true _EXEC_="$1"
            ;;
        * )
            _help_ && exit 0
            ;;
    esac

    shift
done
}
#}}}

#--------------------#
# EXEC MAIN FUNCTION #
#--------------------#{{{
_main_ "$@"
#}}}

#------------------------#
# START PROGRESSING FILE #
#------------------------#{{{
# check if u use more then one input method pipe file curl
if [ -n "$_PIPE_" -a -n "$FILE" ]; then
    echo >&2 "${_name_^^} : Not Allow For 2 Input Methods"
    exit 1
elif [ -n "$_PIPE_" -a -n "$CURL" ]; then
    echo >&2 "${_name_^^} : Not Allow For 2 Input Methods"
    exit 1
elif [ -n "$FILE" -a -n "$CURL" ]; then
    echo >&2 "${_name_^^} : Not Allow For 2 Input Methods"
    exit 1
fi

[ "$CURL" ] && _curl_
_get_links_
[ "$GREP" ] && _grep_
[ "$DMENU" ] && _dmenu_
[ "$EXEC" ] && _exec_
#}}}

